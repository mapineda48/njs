version: "3"

services:
  nginx:
    container_name: nginx
    image: nginx:1.23.2
    depends_on:
      - grafana
      - app
    volumes:
    - ./config/nginx.config:/etc/nginx/conf.d/default.conf
    logging:
      driver: json-file
      options:
        max-size: 50m
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"   
    ports:
      - "8080:80"

  grafana:
    container_name: grafana
    image: grafana/grafana:master
    depends_on:
      - loki
      - prometheus
    volumes:
    - ./config/grafana.ini:/etc/grafana/grafana.ini
    - ./config/grafana-datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
    # ports:
    #   - "3000:3000"

  loki:
    container_name: loki
    image: grafana/loki:1.4.1
    command: -config.file=/etc/loki/local-config.yml
    depends_on:
      - promtail
    volumes:
     - ./config/loki.yml:/etc/loki/local-config.yml
    # ports:
    #   - "3100:3100"

  promtail:
    container_name: promtail
    image: grafana/promtail:1.4.1
    command: -config.file=/etc/promtail/docker-config.yml
    volumes:
      - ./config/promtail.yml:/etc/promtail/docker-config.yml
      - /var/lib/docker/containers:/var/lib/docker/containers # Container logs

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.40.7
    restart: unless-stopped
    depends_on:
      - node_exporter
      - cadvisor
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    expose:
      - 9090

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    expose:
    - 8080

  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100

  db:
    image: "postgres:14"
    environment:
      POSTGRES_PASSWORD: "mypassword"

  app:
    container_name: sigma-app
    image: mapineda48/sigma-test
    logging:
      driver: json-file
      options:
        max-size: 50m
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"
    environment:
      DATABASE_URL: "postgresql://postgres:mypassword@db"
    depends_on:
      - db
    # ports:
    #   - "5000:5000" 